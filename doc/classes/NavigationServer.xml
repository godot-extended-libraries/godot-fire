<?xml version="1.0" encoding="UTF-8" ?>
<class name="NavigationServer" inherits="Object" category="Core" version="3.2">
	<brief_description>
		Server interface for low-level 3D navigation access
	</brief_description>
	<description>
		NavigationServer is the server responsible for all 3D navigation. It creates the agents, maps, and regions for navigation to work as expected. This keeps tracks of any call and executes them during the sync phase. This means that you can request any change to the map, using any thread, without worrying.
	</description>
	<tutorials>
	</tutorials>
	<methods>
		<method name="agent_create" qualifiers="const">
			<return type="RID">
			</return>
			<description>
				Creates the agent.
			</description>
		</method>
		<method name="agent_is_map_changed">
			<return type="bool" qualifiers="const">
			</return>
			<argument index="0" name="agent" type="RID">
			</argument>
			<description>
				Returns true if the map got changed the previous frame.
			</description>
		</method>
		<method name="agent_set_callback" qualifiers="const">
			<return type="void">
			</return>
			<argument index="0" name="agent" type="RID">
			</argument>
			<argument index="1" name="receiver" type="Object">
			</argument>
			<argument index="2" name="method" type="String">
			</argument>
			<argument index="3" name="userdata" type="Variant" default="null">
			</argument>
			<description>
				Callback called at the end of the RVO process.
			</description>
		</method>
		<method name="agent_set_map" qualifiers="const">
			<return type="void">
			</return>
			<argument index="0" name="agent" type="RID">
			</argument>
			<argument index="1" name="map" type="RID">
			</argument>
			<description>
				Puts the agent in the map.
			</description>
		</method>
		<method name="agent_set_max_neighbors" qualifiers="const">
			<return type="void">
			</return>
			<argument index="0" name="agent" type="RID">
			</argument>
			<argument index="1" name="count" type="int">
			</argument>
			<description>
				Sets the maximum number of other agents the agent takes into account in the navigation. The larger this number, the longer the running time of the simulation. If the number is too low, the simulation will not be safe.
			</description>
		</method>
		<method name="agent_set_max_speed" qualifiers="const">
			<return type="void">
			</return>
			<argument index="0" name="agent" type="RID">
			</argument>
			<argument index="1" name="max_speed" type="float">
			</argument>
			<description>
				Sets the maximum speed of the agent. Must be positive.
			</description>
		</method>
		<method name="agent_set_neighbor_dist" qualifiers="const">
			<return type="void">
			</return>
			<argument index="0" name="agent" type="RID">
			</argument>
			<argument index="1" name="dist" type="float">
			</argument>
			<description>
				Sets the maximum distance to other agents this agent takes into account in the navigation. The larger this number, the longer the running time of the simulation. If the number is too low, the simulation will not be safe.
			</description>
		</method>
		<method name="agent_set_position" qualifiers="const">
			<return type="void">
			</return>
			<argument index="0" name="agent" type="RID">
			</argument>
			<argument index="1" name="position" type="Vector3">
			</argument>
			<description>
				Sets the position of the agent in world space.
			</description>
		</method>
		<method name="agent_set_radius" qualifiers="const">
			<return type="void">
			</return>
			<argument index="0" name="agent" type="RID">
			</argument>
			<argument index="1" name="radius" type="float">
			</argument>
			<description>
				Sets the radius of the agent.
			</description>
		</method>
		<method name="agent_set_target_velocity" qualifiers="const">
			<return type="void">
			</return>
			<argument index="0" name="agent" type="RID">
			</argument>
			<argument index="1" name="target_velocity" type="Vector3">
			</argument>
			<description>
				Sets the new target velocity.
			</description>
		</method>
		<method name="agent_set_time_horizon" qualifiers="const">
			<return type="void">
			</return>
			<argument index="0" name="agent" type="RID">
			</argument>
			<argument index="1" name="time" type="float">
			</argument>
			<description>
				The minimal amount of time for which the agent's velocities that are computed by the simulation are safe with respect to other agents. The larger this number, the sooner this agent will respond to the presence of other agents, but the less freedom this agent has in choosing its velocities. Must be positive.
			</description>
		</method>
		<method name="agent_set_velocity" qualifiers="const">
			<return type="void">
			</return>
			<argument index="0" name="agent" type="RID">
			</argument>
			<argument index="1" name="velocity" type="Vector3">
			</argument>
			<description>
				Sets the current velocity of the agent.
			</description>
		</method>
		<method name="free" qualifiers="const">
			<return type="void">
			</return>
			<argument index="0" name="object" type="RID">
			</argument>
			<description>
				Destroy the RID
			</description>
		</method>
		<method name="map_create" qualifiers="const">
			<return type="RID">
			</return>
			<description>
				Create a new map.
			</description>
		</method>
		<method name="map_get_cell_size">
			<return type="float">
			</return>
			<argument index="0" name="map" type="RID">
			</argument>
			<description>
				Returns the map cell size.
			</description>
		</method>
		<method name="map_get_edge_connection_margin" qualifiers="const">
			<return type="float">
			</return>
			<argument index="0" name="map" type="RID">
			</argument>
			<description>
				Returns the edge connection margin of the map.
			</description>
		</method>
		<method name="map_get_path" qualifiers="const">
			<return type="PoolVector3Array">
			</return>
			<argument index="0" name="map" type="RID">
			</argument>
			<argument index="1" name="origin" type="Vector3">
			</argument>
			<argument index="2" name="destination" type="Vector3">
			</argument>
			<argument index="3" name="optimize" type="bool">
			</argument>
			<description>
				Returns the navigation path to reach the destination from the origin.
			</description>
		</method>
		<method name="map_get_up" qualifiers="const">
			<return type="Vector3">
			</return>
			<argument index="0" name="map" type="RID">
			</argument>
			<description>
				Returns the map's up direction.
			</description>
		</method>
		<method name="map_is_active" qualifiers="const">
			<return type="bool">
			</return>
			<argument index="0" name="map" type="RID">
			</argument>
			<description>
				Returns true if the map is active.
			</description>
		</method>
		<method name="map_set_active" qualifiers="const">
			<return type="void">
			</return>
			<argument index="0" name="map" type="RID">
			</argument>
			<argument index="1" name="active" type="bool">
			</argument>
			<description>
				Sets the map active.
			</description>
		</method>
		<method name="map_set_cell_size" qualifiers="const">
			<return type="void">
			</return>
			<argument index="0" name="map" type="RID">
			</argument>
			<argument index="1" name="cell_size" type="float">
			</argument>
			<description>
				Set the map cell size used to weld the navigation mesh polygons.
			</description>
		</method>
		<method name="map_set_edge_connection_margin" qualifiers="const">
			<return type="void">
			</return>
			<argument index="0" name="map" type="RID">
			</argument>
			<argument index="1" name="margin" type="float">
			</argument>
			<description>
				Set the map edge connection margein used to weld the compatible region edges.
			</description>
		</method>
		<method name="map_set_up" qualifiers="const">
			<return type="void">
			</return>
			<argument index="0" name="map" type="RID">
			</argument>
			<argument index="1" name="up" type="Vector3">
			</argument>
			<description>
				Sets the map up direction.
			</description>
		</method>
		<method name="region_bake_navmesh" qualifiers="const">
			<return type="void">
			</return>
			<argument index="0" name="mesh" type="NavigationMesh">
			</argument>
			<argument index="1" name="node" type="Node">
			</argument>
			<description>
				Bakes the navigation mesh.
			</description>
		</method>
		<method name="region_create" qualifiers="const">
			<return type="RID">
			</return>
			<description>
				Creates a new region.
			</description>
		</method>
		<method name="region_set_map" qualifiers="const">
			<return type="void">
			</return>
			<argument index="0" name="region" type="RID">
			</argument>
			<argument index="1" name="map" type="RID">
			</argument>
			<description>
				Sets the map for the region.
			</description>
		</method>
		<method name="region_set_navmesh" qualifiers="const">
			<return type="void">
			</return>
			<argument index="0" name="region" type="RID">
			</argument>
			<argument index="1" name="nav_mesh" type="NavigationMesh">
			</argument>
			<description>
				Sets the navigation mesh for the region.
			</description>
		</method>
		<method name="region_set_transform" qualifiers="const">
			<return type="void">
			</return>
			<argument index="0" name="region" type="RID">
			</argument>
			<argument index="1" name="transform" type="Transform">
			</argument>
			<description>
				Sets the global transformation for the region.
			</description>
		</method>
		<method name="set_active" qualifiers="const">
			<return type="void">
			</return>
			<argument index="0" name="active" type="bool">
			</argument>
			<description>
				Control activation of this server.
			</description>
		</method>
		<method name="step">
			<return type="void">
			</return>
			<argument index="0" name="delta_time" type="float">
			</argument>
			<description>
				Steps the server. This is not threadsafe and must be called in single thread.
			</description>
		</method>
	</methods>
</class>
